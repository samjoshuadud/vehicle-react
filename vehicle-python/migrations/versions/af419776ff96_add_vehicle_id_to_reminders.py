"""add_vehicle_id_to_reminders

Revision ID: af419776ff96
Revises: 417103a36aee
Create Date: 2025-05-28 22:36:53.370419

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'af419776ff96'
down_revision: Union[str, None] = '417103a36aee'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # First add the column as nullable
    op.add_column('Reminders_Info', sa.Column('vehicle_id', sa.Integer(), nullable=True))
    
    # Update existing reminders to use the first vehicle of each user
    op.execute("""
        UPDATE Reminders_Info r 
        SET vehicle_id = (
            SELECT v.vehicle_id 
            FROM Vehicles_Info v 
            WHERE v.user_id = r.user_id 
            LIMIT 1
        )
        WHERE r.vehicle_id IS NULL
    """)
    
    # Delete any reminders that couldn't be assigned to a vehicle
    op.execute("DELETE FROM Reminders_Info WHERE vehicle_id IS NULL")
    
    # Now make the column NOT NULL using MySQL syntax
    op.execute("ALTER TABLE Reminders_Info MODIFY COLUMN vehicle_id int NOT NULL")
    
    # Add the foreign key constraint
    op.create_foreign_key(None, 'Reminders_Info', 'Vehicles_Info', ['vehicle_id'], ['vehicle_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'Reminders_Info', type_='foreignkey')
    op.drop_column('Reminders_Info', 'vehicle_id')
    # ### end Alembic commands ###
